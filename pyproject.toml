[tool.poetry]
name = "logot"
version = "1.1.0"
description = "Test whether your code is logging correctly ðŸªµ"
authors = ["Dave Hall <dave@etianen.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://logot.readthedocs.io"
repository = "https://github.com/etianen/logot"
documentation = "https://logot.readthedocs.io"
keywords = ["test", "unittest", "pytest", "logging"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: AsyncIO",
    "Framework :: Pytest",
    "Framework :: Trio",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Testing :: Unit",
    "Topic :: System :: Logging",
    "Typing :: Typed",
]
packages = [{ include = "logot" }]

[tool.poetry.dependencies]
python = "^3.8"
loguru = { version = ">=0.6,<0.8", optional = true }
structlog = { version = ">=23.3,<25", optional = true }
pytest = { version = ">=7,<9", optional = true }
trio = { version = ">=0.22,<0.25", optional = true }
typing-extensions = { version = ">=4.9", python = "<3.10" }

[tool.poetry.extras]
loguru = ["loguru"]
structlog = ["structlog"]
pytest = ["pytest"]
trio = ["trio"]

[tool.poetry.group.dev.dependencies]
coverage = "^7.4.1"
furo = { version = "*", python = "^3.12" }
hypothesis = "^6.96.1"
mypy = "^1.8.0"
ruff = "^0.2.1"
sphinx = { version = "7.2.6", python = "^3.12" }
sphinx-autobuild = { version = "*", python = "^3.12" }
trio-typing = "^0.10.0"

[tool.poetry.plugins.pytest11]
logot = "logot._pytest"

[tool.poetry.urls]
Changelog = "https://github.com/etianen/logot/releases"
Tracker = "https://github.com/etianen/logot/issues"

[tool.coverage.run]
source = ["logot", "tests"]

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 100
exclude_lines = ["pragma: no cover", "raise NotImplementedError"]

[tool.mypy]
files = ["logot/**/*.py", "tests/**/*.py"]
allow_redefinition = true
explicit_package_bases = true
show_column_numbers = true
strict = true

[tool.pytest.ini_options]
testpaths = ["tests"]
console_output_style = "classic"
addopts = "--tb=native --import-mode=importlib"

[tool.ruff]
include = ["docs/**/*.py", "logot/**/*.py", "tests/**/*.py"]
line-length = 120

[tool.ruff.lint]
select = ["E", "F", "W", "I", "UP"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
